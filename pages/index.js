import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React, { useEffect, useState } from "react";
import api from "./services/api";
import api2 from "./services/api2";

export default function Home() {

  const [coinsRegistered, setCoinsRegistred] = useState([]);

  const deleteCoin = async (coinId) => {
    await api.delete(`/coin/${coinId}`)
    .then((response) => location.reload())
    .catch((err) => {
        alert(err)
    })

  }

  const coinVoted = async (coinId, coinVotes) => {
    await api.patch(`/coin/${coinId}`, {
      votes: coinVotes+1
    })
    .then((response) => location.reload())
    .catch((err) => {
        alert(err)
    })

  }

  useEffect(() => {
    api.get("/coins")
      .then((response) => {

        response.data.sort((a, b) => {
          if (a.votes < b.votes)
              return 1;
          if (a.votes > b.votes)
              return -1;
          return 0;
        })

        response.data.map(coin => {
          let atualPrice
          api2.get(`/json/${coin.shortname}`)
          .then(response => coin.price = response.data[0].bid)
          .catch(err => console.log(err))
          // console.log(atualPrice)
          // coin.price = atualPrice
        })

        setCoinsRegistred(response.data)
      })
      .catch((err) => {
        console.error("ops! ocorreu um erro" + err);
      });
  }, []);

  // console.log(coinsRegistered)

  return (
    <div className={styles.container}>
      <Head>
        <title>UpVote Coins</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>

        <h1 className={styles.title}>
          Welcome to <a href="https://www.linkedin.com/in/caiolucenacolaco/">UpVote Coins!</a>
        </h1>

        <p className={styles.description}>
          <a href='/'><button className={styles.btn_window}>View Coins</button></a>
          <a href='/register'><button className={styles.btn_window}>Register Coins</button></a>
        </p>

        <div className={styles.grid}>

            {coinsRegistered.map(coin => {
                return (
                  <div key={coin.ID} className={styles.card}>
                    <a  onClick={() => coinVoted(coin.ID, coin.votes)} >
                      <div className={styles.card_header}>
                        <h2>{coin.shortname}</h2>
                      </div>

                        <p className={styles.card_content}>R$ {coin.price}</p>
                        <p className={styles.card_content}>{coin.votes} votos</p>
                    </a>
                    <button onClick={() => deleteCoin(coin.ID)} className={styles.card_delete}>Delete</button>
                  </div>
                )
            })}

        </div>

      </main>

      <footer className={styles.footer}>

        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            Caio Lucena Cola√ßo
          </span>
        </a>
      
      </footer>
    </div>
  )
}
